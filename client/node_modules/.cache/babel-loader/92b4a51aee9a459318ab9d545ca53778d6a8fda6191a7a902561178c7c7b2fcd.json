{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Programacion\\\\Project-Weather\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /* ciudades empieza como arreglo vacío */\n  const [cities, setCities] = useState([]);\n  let apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n  useEffect(() => {\n    const cities = JSON.parse(window.localStorage.getItem('My cities'));\n\n    if (tareasGuardadas) {\n      setTareas(tareasGuardadas);\n    }\n  }, []);\n  useEffect(() => {\n    window.localStorage.setItem('My cities', JSON.stringify(tareas));\n  }, [tareas]);\n  /* Se puede usar axios pero tene que importarlo. */\n\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n    /* hace el pedido de fetch. El fetch no lo tenes que importar pq es parte de JS */\n    .then(r => r.json())\n    /* transforma a jason la respuesta */\n    .then(recurso => {\n      if (cities.find(c => c.id === recurso.id)) {\n        alert('You have already selected this city.');\n        return;\n      }\n\n      if (recurso.main !== undefined) {\n        /* si existe se crea un objeto con su info. Formatea sus datos y luego lo guarda en las ciudades. */\n        const ciudad = {\n          temp: Math.round(recurso.main.temp),\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          humidity: recurso.main.humidity,\n          lon: recurso.coord.lon,\n          lat: recurso.coord.lat\n        };\n        setCities(previousCities => [...previousCities, ciudad]);\n        /* agrega la ciudad formateada al arreglo de ciudades */\n      } else {\n        alert('Ciudad no encontrada');\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(previousCities => previousCities.filter(ciudad => ciudad.id !== id)\n    /* tiene que recibir lo q se llama el estado anterior. Le podes poner cualquier nombre (previousCities). Cuando hay que identificar algo, lo mejor es ir por su id (si es q lo tiene) */\n    );\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UtFDQT3EIws3THEJkYkMoyhXxu4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Cards","Nav","App","cities","setCities","apiKey","useEffect","JSON","parse","window","localStorage","getItem","tareasGuardadas","setTareas","setItem","stringify","tareas","onSearch","ciudad","fetch","then","r","json","recurso","find","c","id","alert","main","undefined","temp","Math","round","min","temp_min","max","temp_max","img","weather","icon","name","humidity","lon","coord","lat","previousCities","onClose","filter"],"sources":["C:/Users/Usuario/Desktop/Programacion/Project-Weather/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav.jsx';\n\nfunction App() {\n  /* ciudades empieza como arreglo vacío */\n  const [cities, setCities] = useState([]);\n  let apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\n  useEffect(() => {\n    const cities = JSON.parse(window.localStorage.getItem('My cities'));\n    if (tareasGuardadas) {\n      setTareas(tareasGuardadas);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('My cities', JSON.stringify(tareas));\n  }, [tareas]);\n\n  /* Se puede usar axios pero tene que importarlo. */\n  function onSearch(ciudad) {\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\n    ) /* hace el pedido de fetch. El fetch no lo tenes que importar pq es parte de JS */\n      .then((r) => r.json()) /* transforma a jason la respuesta */\n      .then((recurso) => {\n        if (cities.find((c) => c.id === recurso.id)) {\n          alert('You have already selected this city.');\n          return;\n        }\n\n        if (recurso.main !== undefined) {\n          /* si existe se crea un objeto con su info. Formatea sus datos y luego lo guarda en las ciudades. */\n          const ciudad = {\n            temp: Math.round(recurso.main.temp),\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            humidity: recurso.main.humidity,\n            lon: recurso.coord.lon,\n            lat: recurso.coord.lat,\n          };\n          setCities((previousCities) => [\n            ...previousCities,\n            ciudad,\n          ]); /* agrega la ciudad formateada al arreglo de ciudades */\n        } else {\n          alert('Ciudad no encontrada');\n        }\n      });\n  }\n\n  function onClose(id) {\n    setCities(\n      (previousCities) =>\n        previousCities.filter(\n          (ciudad) => ciudad.id !== id\n        ) /* tiene que recibir lo q se llama el estado anterior. Le podes poner cualquier nombre (previousCities). Cuando hay que identificar algo, lo mejor es ir por su id (si es q lo tiene) */\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav onSearch={onSearch} />{' '}\n      {/* le tengo que hacer llegar la función onSearch a Nav para que luego Nav se lo pase a SearchBar. Las propiedades y funciones pasan de padre a hijo para que las puedan usar. Luego la función nieto o lo que sea puede usar la función modificando el estado del componente padre. */}\n      <Cards cities={cities} onClose={onClose} />\n      {/* cards recibe un array de ciudades que lo tenemos en cities =  const [cities, setCities] = useState([]);*/}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}